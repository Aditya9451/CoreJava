package com.collections.list;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;

public class ArrayListExample {

	public static void main(String[] args) {

		
		List<String> list1 = Collections.synchronizedList(new ArrayList<String>());
		ArrayList<String> list2 = new ArrayList<String>();
		ArrayList<String> list3 = new ArrayList<String>();
		
		list1.add("Aditya");
		list1.add("Preeti");
		list1.add("Priyanka");
		list1.remove(0);
		list1.add("Aditya");
		System.out.println("Index of Aditya "+list1.indexOf("Aditya"));
		
		
		list2.add("RJ");
		list2.add("UJ");
		list2.remove("RJ");
		list2.add("RJ");
		
		System.out.println(list3.add("SP Gupta"));
		list3.add("Rekha Devi");
		list3.removeIf(n ->(n.equals("SP Gupta")));
		
		/*synchronized (list1) {*/
			
			for (String string : list1) {
				
				System.out.println(string);
			}
			
		//}
		
		for (String string : list2) {
			System.out.println(string);
		}
		
		for (String string : list3) {
			System.out.println(string);
		}
		
		list1.addAll(list2);
		for (String string : list1) {
			System.out.println(string);
		}
		
		CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();
		list.add("Apple");
		list.add("Banana");
		list.add("Orange");
		list.add("Orange");
		 
		if (list.addIfAbsent("Orange")) {
		    System.out.println("Orange was added");
		}
		
		else
			System.out.println("Not added");
		
	
		Iterator<String> itr= list.iterator();
		while(itr.hasNext())
			if(itr.next()=="Banana") {
				itr.remove();
			}
			System.out.println(itr.next());
		//list.forEach(n->System.out.println(n));
			ThreadOne t1= new ThreadOne(list, list1);
	}
	
	
	
}

class ThreadOne extends Thread{

	public ThreadOne(CopyOnWriteArrayList<String> list, List<String> list1) {
		// TODO Auto-generated constructor stub
	}
	
	
	
}

class ThreadTwo extends Thread{
	
	
}
